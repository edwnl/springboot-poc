# .github/workflows/backend-cicd.yml
name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: |
          cd backend
          ls
          ./gradlew build

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
#
#  deploy:
#    needs: build-and-push
#    runs-on: ubuntu-latest
#    environment: production
#
#    steps:
#      - name: Azure login
#        uses: azure/login@v2
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Deploy to Azure Container Apps
#        uses: azure/container-apps-deploy-action@v2
#        with:
#          appSourcePath: ${{ github.workspace }}
#          registryUrl: ${{ env.REGISTRY }}
#          registryUsername: ${{ github.actor }}
#          registryPassword: ${{ secrets.GITHUB_TOKEN }}
#          containerAppName: springboot-poc-backend
#          resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP }}
#          imageToDeploy: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest
#          targetPort: 8080